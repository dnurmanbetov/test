#!/usr/bin/env bash
#
# Calls docker inside minikube

set -o errexit   # exit on error
set -o nounset   # fail if var undefined
set -o noclobber # don't overwrite exists files via >
set -o pipefail  # fails if pipes (|) fails
# set -o xtrace  # debug

# obtain directory with current script
SOURCE="${BASH_SOURCE[0]}"
while [ -h "$SOURCE" ]; do # resolve $SOURCE until the file is no longer a symlink
  DIR="$( cd -P "$( dirname "$SOURCE" )" >/dev/null 2>&1 && pwd )"
  SOURCE="$(readlink "$SOURCE")"
  [[ $SOURCE != /* ]] && SOURCE="$DIR/$SOURCE" # if $SOURCE was a relative symlink, we need to resolve it relative to the path where the symlink file was located
done
CURR_DIR="$( cd -P "$( dirname "$SOURCE" )" >/dev/null 2>&1 && pwd )"
ROOT_DIR="$(dirname "$CURR_DIR" )"

# default value
MINIKUBE_PROFILE=minikube

# import env vars
set -o allexport
if [[ -f ${ROOT_DIR}/.env ]]; then
    # shellcheck source=/dev/null
	source "${ROOT_DIR}/.env"
fi
if [[ -f ${HOME}/.inventcorp.env ]]; then
    # use global vars
    # shellcheck source=/dev/null
    source "${HOME}/.inventcorp.env"
fi
set +o allexport

if [ "$LOCAL_MINIKUBE_DRIVER" != "desktop" ]; then
    eval "$(minikube docker-env --shell bash --profile="${MINIKUBE_PROFILE}")"
fi

# shellcheck disable=SC2068
docker $@
